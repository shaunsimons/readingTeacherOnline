"""
Django settings for readingTeacherOnline project.

Generated by 'django-admin startproject' using Django 3.1.1.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

from pathlib import Path
import os

import json


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

variable_settings_file = open( BASE_DIR / 'readingTeacherOnline/variable_settings.json', 'r')
variable_settings = json.load(variable_settings_file)

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = variable_settings['DJANGO_SECRET_KEY']

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = ['www.readingteacheronline.com']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'blog',
    'ckeditor',
    'ckeditor_uploader',
    'storages',
    'courses_site',
    'memberships',
]

CKEDITOR_UPLOAD_PATH = 'blog/images/'

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'readingTeacherOnline.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates']
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'readingTeacherOnline.context_processors.extras',
            ],
        },
    },
]

WSGI_APPLICATION = 'readingTeacherOnline.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': variable_settings["MYSQL_USERNAME_DBNAME"],
        'USER': variable_settings['MYSQL_USERNAME'],
        'PASSWORD': variable_settings['MYSQL_PASSWORD'],
        'HOST': variable_settings['MYSQL_HOSTNAME'],
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATICFILES_DIRS = [
    BASE_DIR / 'node_modules',
]
STATIC_ROOT = BASE_DIR / 'static'
STATIC_URL = '/static/'


MEDIA_ROOT = BASE_DIR / 'media'
MEDIA_URL = '/media/'

AWS_ACCESS_KEY_ID = variable_settings['AWS_ACCESS_KEY_ID']
AWS_SECRET_ACCESS_KEY = variable_settings['AWS_SECRET_ACCESS_KEY']
AWS_STORAGE_BUCKET_NAME = variable_settings['AWS_STORAGE_BUCKET_NAME']

AWS_S3_FILE_OVERWRITE = False
AWS_DEFAULT_ACL = None
DEFAULT_FILE_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'

STRIPE_PRODUCT_ID = variable_settings['STRIPE_LIVE_PRODUCT_ID']
STRIPE_PRICE_ID = variable_settings['STRIPE_LIVE_PRODUCT_PRICE_ID']

STRIPE_PUBLIC_KEY = variable_settings['STRIPE_LIVE_PUBLIC_KEY']
STRIPE_SECRET_KEY = variable_settings['STRIPE_LIVE_SECRET_KEY']

STRIPE_WEBHOOK_ENDPOINT_SECRET = variable_settings['STRIPE_WEBHOOK_ENDPOINT_SECRET']

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = variable_settings['EMAIL_HOST']
EMAIL_PORT = variable_settings['EMAIL_PORT']
EMAIL_USE_TLS = variable_settings['EMAIL_USE_TLS']
EMAIL_HOST_USER = variable_settings['EMAIL_HOST_USER']
EMAIL_HOST_PASSWORD = variable_settings['EMAIL_HOST_PASSWORD']
DEFAULT_FROM_EMAIL = variable_settings['DEFAULT_FROM_EMAIL']

try:
    from .local_settings import *
except ImportError:
    print('local_setting.py not found. This is a production server.')


